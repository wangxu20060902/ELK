elatic elk
logstash  input插件
file 的配置项
input {
  file {
    path => ["/var/log/*.log", "/var/log/meassage"]
	type => "system"
	start_position => "beginning"
  }
}
一些比较有用的配置项，可以用来指定filewatch库的行为
discover_interval: logstash每隔多久去检查一次监听的path下是否有新文件，默认是15秒
exclude: 不想被监听的文件可以排除出去，这里跟path一样支持glob展开
sincedb_path: 如果你不想用默认的$HOME/.sincedb 可以通过这个配置定义sincedb文件的其他位置
sincedb_write_interval: logstash每隔多久写一次sincedb文件，默认是15秒
stat_interval: logstash 每隔多久检查一次被侦听的文件状态，默认是1秒
start_position : logstash 从什么位置开始读取文件数据默认是结束位置，也就是说logstash进程 以tail -F 的形式运行如果你是导入原有数据，把这个设置成"beginning" logstash 会从头开始读取数据
colse_older: 一个已经监听中的文件，如果超过这个值的时间内没有更新内容就关闭监听它的文件句柄，默认3600秒
ignore_older: 在每次检查文件列表的时候，如果一个文件的最后修改时间超过这个值，就忽略这个文件，默认86400秒 一天

注意事项：
1.通常你要导入数据到elasticsearch 的话，你需要filter/date插件来修改默认的"@timestamp"字段值
2.filewatch 只支持绝对路径，而且不会自动递归目录，所以如果有需要的话，请用数据方式都写明具体哪些文件
3.logstash file 不支持flunentd那样的path =>"/path/to/%{+yyyy/MM/dd/hh}.log"的写法，达到相通的目的可写成 path =>"/path/to/*/*/*/*.log" 或者 path => "/path/to/**/*.log"
4.start_position 仅在文件没有被监听过的时候起作用，如果sincedb文件中已经有这个文件的inode 记录，logstash 会从记录过得pos位置开始读取数据

tcp 输入配置
input {
  tcp {
    port => 8888
	mode => "server"
	ssl_enable => "false"
  }
}
目前主要用处通过配合nc 命令导入旧数据，启动logstash 进程后，在另外一端输入下列命令导入数据
#nc 127.0.0.1 8888 < oldata
做法比file 监听好主要是命令执行完毕能够知道文件已经导入完毕，能够清楚的知道任务是否完成

syslog 输入配置








